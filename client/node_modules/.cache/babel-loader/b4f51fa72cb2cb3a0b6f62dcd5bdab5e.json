{"ast":null,"code":"var _jsxFileName = \"/Users/debanikpurkayastha/Desktop/corona-aid/client/src/Offers.js\";\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nexport default function Offers(props) {\n  const [value, setValue] = useState([0, 1, 2, 3, 4, 5]);\n  const [users, setUsers] = useState([]);\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  const possibleTasks = ['Groceries', 'Medicine/Health Care', 'Transportation', 'Pet Care', 'Child Care', 'Virtual Meetup'];\n  const [modalInfo, setModalInfo] = useState({\n    'first_name': '',\n    'last_name': '',\n    'email': '',\n    'offer': {\n      'tasks': [''],\n      'details': '',\n      'neighborhoods': ['']\n    }\n  });\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  function setModal(user) {\n    setModalInfo(user);\n  }\n\n  useEffect(() => {\n    var url = \"/api/users/all?\";\n    const {\n      latitude,\n      longitude\n    } = props.state;\n    let params = {\n      'latitude': latitude,\n      'longitude': longitude\n    };\n    let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n    url += query;\n\n    async function fetchData() {\n      const response = await fetch(url);\n      response.json().then(data => {\n        setUsers(data);\n        setDisplayedUsers(data);\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const generateTasks = tasks => {\n    var res = tasks[0];\n\n    for (var i = 1; i < tasks.length; i++) {\n      res += ', ';\n      res += tasks[i];\n    }\n\n    return res;\n  };\n\n  const handleChange = val => {\n    setValue(val);\n    const selectedTasks = [];\n\n    for (var i = 0; i < val.length; i++) {\n      selectedTasks.push(possibleTasks[val[i]]);\n    }\n\n    const result = users.filter(user => selectedTasks.some(v => user.offer.tasks.indexOf(v) !== -1));\n    setDisplayedUsers(result);\n  };\n\n  let buttonStyles = {\n    border: '0.5px solid #DADDE1'\n  };\n  return React.createElement(\"div\", {\n    className: \"shadow p-3 mb-5 bg-white rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(ToggleButtonGroup, {\n    type: \"checkbox\",\n    className: \"btn-group d-flex flex-wrap\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, possibleTasks.map((task, i) => {\n    return React.createElement(ToggleButton, {\n      style: buttonStyles,\n      className: \"toggleButton\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      key: i,\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }\n    }, task);\n  })), React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Tasks\"), React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Neighborhoods\")))), React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, displayedUsers.map(user => {\n    return React.createElement(ListGroup.Item, {\n      key: user._id,\n      action: true,\n      style: {\n        fontSize: 16\n      },\n      onClick: () => {\n        handleShow();\n        setModal({ ...user\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }\n    }, React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, user.offer.tasks.map(task => {\n      return React.createElement(React.Fragment, null, React.createElement(Badge, {\n        pill: true,\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 50\n        }\n      }, task), ' ');\n    })), React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, user.offer.neighborhoods.map(neighborhood => {\n      return React.createElement(React.Fragment, null, React.createElement(Badge, {\n        pill: true,\n        variant: \"warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 50\n        }\n      }, neighborhood), ' ');\n    }))));\n  })), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    style: {\n      marginTop: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Offer\")), React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 24\n    }\n  }, \"Tasks:\"), \"  \", modalInfo.offer.tasks.map(task => {\n    return React.createElement(React.Fragment, null, React.createElement(Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }\n    }, task), ' ');\n  })), React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 24\n    }\n  }, \"Name:\"), \" \", modalInfo.first_name, \" \", modalInfo.last_name), React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 24\n    }\n  }, \"Contact:\"), \" \", modalInfo.email), React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 24\n    }\n  }, \"Details:\"), \" \", modalInfo.offer.details), React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 24\n    }\n  }, \"Neighborhoods:\"), \"  \", modalInfo.offer.neighborhoods.map(neighborhood => {\n    return React.createElement(React.Fragment, null, React.createElement(Badge, {\n      pill: true,\n      variant: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 38\n      }\n    }, neighborhood), ' ');\n  })))));\n}","map":{"version":3,"sources":["/Users/debanikpurkayastha/Desktop/corona-aid/client/src/Offers.js"],"names":["React","useEffect","useState","ListGroup","Row","Col","Modal","Button","Badge","ToggleButton","ToggleButtonGroup","Offers","props","value","setValue","users","setUsers","displayedUsers","setDisplayedUsers","possibleTasks","modalInfo","setModalInfo","show","setShow","handleClose","handleShow","setModal","user","url","latitude","longitude","state","params","query","Object","keys","map","k","encodeURIComponent","join","fetchData","response","fetch","json","then","data","generateTasks","tasks","res","i","length","handleChange","val","selectedTasks","push","result","filter","some","v","offer","indexOf","buttonStyles","border","task","_id","fontSize","neighborhoods","neighborhood","marginTop","first_name","last_name","email","details"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Badge from 'react-bootstrap/Badge'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\n\nexport default function Offers(props) {\n    const [value, setValue] = useState([0, 1, 2, 3, 4, 5]);\n    const [users, setUsers] = useState([]);\n    const [displayedUsers, setDisplayedUsers] = useState([]);\n    const possibleTasks = ['Groceries', 'Medicine/Health Care', 'Transportation',\n    'Pet Care', 'Child Care', 'Virtual Meetup'];\n\n    const [modalInfo, setModalInfo] = useState({\n        'first_name': '',\n        'last_name': '',\n        'email': '',\n        'offer': {\n            'tasks': [''],\n            'details': '',\n            'neighborhoods': ['']\n        }\n    });\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    function setModal(user) {\n        setModalInfo(user);\n    }\n\n    useEffect(() => {\n        var url = \"/api/users/all?\";\n        const { latitude, longitude } = props.state;\n        let params = {\n            'latitude': latitude,\n            'longitude': longitude\n        }\n        let query = Object.keys(params)\n             .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n             .join('&');\n        url += query;\n\n        async function fetchData() {\n            const response = await fetch(url);\n            response.json().then((data) => {\n                setUsers(data);\n                setDisplayedUsers(data);\n            });\n        }\n        fetchData();\n    }, []);\n\n    const generateTasks = (tasks) => {\n        var res = tasks[0]\n        for (var i = 1; i < tasks.length; i++) {\n            res += ', '\n            res += tasks[i];\n        }\n        return res;\n    }\n\n    const handleChange = (val) => {\n        setValue(val);\n        const selectedTasks = [];\n        for (var i = 0; i < val.length; i++) {\n            selectedTasks.push(possibleTasks[val[i]]);\n        }\n        const result = users.filter(user => selectedTasks.some(v => user.offer.tasks.indexOf(v) !== -1));\n        setDisplayedUsers(result);\n    };\n\n    let buttonStyles = {\n        border: '0.5px solid #DADDE1',\n    }\n\n    return (\n        <div className=\"shadow p-3 mb-5 bg-white rounded\">\n            <ToggleButtonGroup type=\"checkbox\" className=\"btn-group d-flex flex-wrap\" value={value} onChange={handleChange}>\n                {possibleTasks.map((task, i) => {\n                    return <ToggleButton style={buttonStyles} className=\"toggleButton\" variant=\"outline-primary\" size=\"sm\" key = {i} value={i}>{task}</ToggleButton>\n                })}\n            </ToggleButtonGroup>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                    <Row>\n                        <Col>Tasks</Col>\n                        <Col>Neighborhoods</Col>\n                    </Row>\n                </ListGroup.Item>\n            </ListGroup>\n            <ListGroup variant=\"flush\">\n                {displayedUsers.map((user) => {\n                    return <ListGroup.Item key={user._id} action \n                                            style = {{fontSize: 16}} \n                                            onClick={() => { handleShow(); setModal({...user});}}>\n                            <Row>\n                                <Col>{user.offer.tasks.map((task) => {\n                                        return <><Badge pill variant=\"primary\">{task}</Badge>{' '}</>\n                                    })}</Col>\n                                <Col>{user.offer.neighborhoods.map((neighborhood) => {\n                                        return <><Badge pill variant=\"warning\">{neighborhood}</Badge>{' '}</>\n                                    })}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                })}\n            </ListGroup>\n            <Modal show={show} onHide={handleClose} style = {{marginTop: 60}}>\n                <Modal.Header closeButton>\n                <Modal.Title>Offer</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p><b>Tasks:</b>  {modalInfo.offer.tasks.map((task) => {\n                            return <><Badge pill variant=\"primary\">{task}</Badge>{' '}</>\n                        })}\n                    </p>\n                    <p><b>Name:</b> {modalInfo.first_name} {modalInfo.last_name}</p>\n                    <p><b>Contact:</b> {modalInfo.email}</p>\n                    <p><b>Details:</b> {modalInfo.offer.details}</p>\n                    <p><b>Neighborhoods:</b>  {modalInfo.offer.neighborhoods.map((neighborhood) => {\n                            return <><Badge pill variant=\"warning\">{neighborhood}</Badge>{' '}</>\n                        })}\n                    </p>\n                </Modal.Body>\n            </Modal>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}